<?xml version="1.0" encoding="UTF-8"?>

<!-- This build file must be configured for local use, using a file
     called deploy.properties, in this directory.

     See example.properties in this directory for an example.
-->

<!-- Starexec production build script. Author: Tyler Jensen, changes by Aaron Stump, Eric Burns -->
<project name="starexec" default="epilog-test" basedir=".">

	<!-- Properties are read-only, so anything in this file will take precedence
	     over anything declared below
	-->
	<property file="deploy.properties"/>

	<!-- Set up path information for use throughout this script -->
	<property name="STAREXEC_APPNAME" value="starexec" />
	<property name="appname" value="${STAREXEC_APPNAME}" />
	<property name="project-name" value="${STAREXEC_APPNAME}" />
	<property name="war-file-name" value="${project-name}.war" />
	<property name="source-dir" value="src" />
	<property name="data-to-source-dir" value="${source-dir}/org/starexec/data/to"/>
	<property name="scripts-dir" value="scripts-common" />
	<property name="build-dir" value="bin" />
	<property name="class-dir" value="${build-dir}/classes" />
	<property name="config-dir" value="${class-dir}/org/starexec/config" />
	<property name="data_dir" value="" />
	<property name="esapi-dir" value="${class-dir}/esapi"/>
	<property name="resource-dir" value="${class-dir}/org/starexec/test/resources" />
	<property name="web-inf" value="WebContent/WEB-INF" />
	<property name="meta-inf" value="WebContent/META-INF" />
	<property name="css-input-dir" value="WebContent/css" />
	<property name="css-output-dir" value="WebContent/css" />
	<property name="css-properties" value="${css-input-dir}/_properties.scss" />
	<property name="starcom-base" value="${source-dir}/org/starexec/command"/>
	<property name="starcom-comp" value="${starcom-base}/compile"/>
	<property name="starcom-build" value="${starcom-base}/build" />
	<property name="starcomlib" value="${web-inf}/lib"/>
	<property name="starcomzip" value="WebContent/public/starexeccommand.zip"/>
	<property name="starcomsrc" value="${starcom-base}"/>
	<property name="bash-header" value="#!/bin/bash${line.separator}" />
	<property name="compression-enabled" value="true" />
	<property name="tomcat-dir" value="" />

	<!-- Tell java where to look for JAR files while compiling (our application lib and the apache lib) -->
	<path id="classpath">
		<fileset dir="${web-inf}/lib" includes="**/*.jar"/>
		<fileset dir="${tomcat-dir}/lib" includes="**/*.jar"/>
		<fileset dir="local-lib" includes="**/*.jar"/>
	</path>
	<path id="starcomclasspath">
		<fileset dir="${starcomlib}" includes="**/*.jar"/>
		<fileset dir="${tomcat-dir}/lib" includes="**/*.jar"/>
		<fileset dir="local-lib" includes="**/*.jar"/>
	</path>

	<target name="register-commands">
		<!-- Register commands and create build timestamp for build properties file -->
		<tstamp>
			<format property="builtat" pattern="MM/dd/yyyy hh:mm:ss aa" />
		</tstamp>
		<exec executable="svnversion" outputproperty="svnversion"/>
		<exec executable="whoami" outputproperty="whoami"/>
		<property name="generated-message"
		          value="This file generated during build: ${builtat}" />
		<property name="generated-bash-header"
		          value="${bash-header}# ${generated-message}${line.separator}" />

		<!-- Clear the build directory if it exists and re-make the dir -->
		<delete dir="${build-dir}" />
		<mkdir dir="${build-dir}" />
		<mkdir dir="${class-dir}" />
	</target>

	<import file="build/build-css.xml"/>
	<import file="build/build-compile.xml"/>
	<import file="build/build-config.xml"/>
	<import file="build/build-test.xml"/>
	<import file="build/build-starexeccommand.xml"/>

	<target name="format-source" depends="format-css" description="Reformat source" />
	<target name="epilog-test" depends="test, zipstarcom, war" />
	<target name="build" depends="epilog-test" description="Build" />
	<target name="skipcompilation" depends="war" description="Package existing build into a WAR" />

</project>
