#!/bin/bash

#==========================================================================
# Standard SGE job script setup
#==========================================================================

# The queue to submit to
#$ -q $$QUEUE$$

# Request exclusive access
#$ -l excl=true

# Enable resource limit signals
#$ -notify

# Submit under sandbox user
#$ -u sandbox

# Resource limits
#$ -l s_vmem=$$MAX_MEM$$K -l s_fsize=$$MAX_WRITE$$K -l s_rt=$$MAX_RUNTIME$$ -l s_cpu=$$MAX_CPUTIME$$

# Default shell is bash
#$ -S /bin/bash

# Merge stdout and stderr streams
#$ -j y

# Variables in local environment
#$ -v JOB_STAR_ID=$$JOBID$$,POST_PROCESSOR_PATH=$$POST_PROCESSOR_PATH$$,USER_ID=$$USERID$$,BENCH_DEPENDS=$$BENCH_DEPENDS$$,LOCAL_DEPENDS=$$LOCAL_DEPENDS$$,SOLVER_PATH=$$SOLVER_PATH$$,SOLVER_NAME=$$SOLVER_NAME$$,CONFIG_NAME=$$CONFIG$$,BENCH_PATH=$$BENCH$$,PAIR_ID=$$PAIRID$$,STAREXEC_OUT_DIR=$$OUT_DIR$$,STAREXEC_MAX_MEM=$$MAX_MEM$$,STAREXEC_MAX_WRITE=$$MAX_WRITE$$,STAREXEC_CPU_LIMIT=$$MAX_CPUTIME$$,STAREXEC_WALLCLOCK_LIMIT=$$MAX_RUNTIME$$,REPORT_HOST=$$REPORT_HOST$$,DB_NAME=$$DB_NAME$$

# Include common functions
. /home/starexec/sge_scripts/functions.bash

#==========================================================================
# Signal Traps
#==========================================================================

trap "limitExceeded 'cpu time or memory' $EXCEED_CPU_MEM" SIGXCPU
trap "limitExceeded 'runtime' $EXCEED_RUNTIME" SIGUSR1
trap "limitExceeded 'file write' $EXCEED_FILE_WRITE" SIGXFSZ

#==========================================================================
# Execute (prolog will take care of data staging)
# NOTE: Keep things in here to a MINIMUM. Anything below this line counts
# against the user's execution time
#==========================================================================

# Change directory to the workspace just in case
cd /export/starexec/sandbox/solver/bin

# Compute local worker node path to resources
NODE_SOLVER_PATH=/export/starexec/sandbox/solver/bin/starexec_run_${CONFIG_NAME}
NODE_BENCH_PATH=/export/starexec/sandbox/benchmark/${BENCH_PATH##*/}
NODE_RUNSOLVER_PATH=/export/starexec/sandbox/solver/bin/runsolver

# Execute the solver on the benchmark and send all output to that file
# $NODE_SOLVER_PATH $NODE_BENCH_PATH &> $STAREXEC_OUT_DIR/stdout.txt
$NODE_RUNSOLVER_PATH --timestamp -w $STAREXEC_OUT_DIR/watcher.out -o $STAREXEC_OUT_DIR/stdout.txt $NODE_SOLVER_PATH $NODE_BENCH_PATH

#==========================================================================
# Complete (epilog will take care or reporting and data saving) 
#==========================================================================
